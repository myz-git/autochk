请记录识别哪些xml是一个rac下需要合并的规则：
我们可以通过xml的命名规则来识别，xml命名规则：yyyymmdd_dbname_hostname_instname.xml
比如：20240401_M001R01DG_m0ora01_M001R011.xml, 其中M001R01DG是数据库名,lm0ora01是主机名,M001R011是实例名, 一套rac的yyyymmdd_dbname是一样的，不同节点的hostname和instname不一样；

我们需要找到相同yyyymmdd_dbname_前缀，不同hostname_instname的xml作为一套rac的数据库需要合并（instname的最后一位代表实例序号）
比如如下三个是一组，需要合并：
20240401_M001R01DG_lm0ora01_M001R011.xml，20240401_M001R01DG_lm0ora02_M001R012.xml，20240401_M001R01DG_lm0ora03_M001R013.xml
如下两个是一组，需要合并：
20240401_M003R02DG_lm0ora03_M003R021.xml，20240401_M003R02DG_lm0ora04_M003R022.xml

接下来是根据我提供的xml内容确定如何合并；

合并规则：
<TAG0>是主机及RAC相关内容是需要保留的；
<TAG1>是数据库级别通用信息，需要合并；
<TAG2>是实例单独的信息，需要保留的；

合并前结构如下：
<?xml version="1.0" encoding="UTF-8"?>
<EACHK>
<TAG0>
	<VER>
	<HOSTNAME>
	<OS>
	<RELVER>
	<CORES>
	<CPUCOUNT>
	<CPUMHZ>
	<MEMTOTAL>
	<SWAPTOTAL>
	<OSPARAMETER>
	<ULIMIT>
	<IPADDR>
	<DBMAA>
	<OSLOG>
	<FILESYSTEM>
	<INODEUSAGE>
	<CPUSTAT>
	<MEMSTAT> 
	<IOSTAT>
	<THPSTAT>
	<HUGPAGE>
	<NUMA>
	<NTP>
	<TMZONE> 
	<RPM_FIREFOX> 
	<RPM_FREETYPE> 
	<RPM_GHOSTSCRIPT>
	<RPM_SAMBA> 
	<RPM_OPENVMTOOLS>
</TAG0>
<TAG1>
	<DBCRSCHECK>
	<DBASMUSAGE>
	<DBNAME>
	<DBVER>
	<DBOSINFO>
	<LOGMODE>
	<FLASHBACK>
	<DBTOTALSIZE>
	<DBFILECOUNT>
	<DBTBLCOUNT>
	<DBROLE>
	<DBTBSUSAGE>
	<DBDATAFILE>
	<DATAFILE_SIZE>
	<TMPFILE_SIZE>
	<OWNER_SIZE>
	<USER_INFO>
	<TAB_INFO>
	<DBUSERSIZE>
	<DBREDOCHECK>
	<DBRESOURCE>
	<DBRMANCHECK>
	<DBDGLAGCHECK>
	<DBTABLEPARALLEL>
	<DBINDEXPARALLEL>
	<DBSEQUENCE>
	<DB_SEQ_USAGE>
	<DBSTATUS>
	<DBOPTION>
	<DBFEATURES>
	<DBLANG>
	<DBPARAMETER>
	<DB_CURSORMEM>
	<DB_EXPIR_USER>
	<DB_PASSWORD_VERIF>
	<DBDBAPRIV>
	<DBSYSDBA>
	<DBAUDITSEGMENT>
	<DBAUDITCONT>
	<DBINVALIDOBJECT>
	<DBINVALIDINDEX>
	<DBCONTROLFILE>
	<DB_NOSYS_IN_SYSTEM>
	<DBRECOVERYDEST>
	<DBFLASHRECOVERYUSEAGE>
	<DBPRODUCTUSERFAILEDLOGIN>
	<DBVIRSCHECK>
	<DBSCNHEALTHCHECK>
	<DBPSU>
	<DBPATCH>
	<DBDGERRCHECK>
	<DB_PARAMETER_FILE>
</TAG1>
<TAG2>
	<DBREDOSWITCH>
	<DB_SGA_SIZE>
	<DB_SHP_SIZE>
	<DB_SHP_PCT>
	<DB_4031CHECK>
	<LOADPROFILE>
	<INSTEFFICIENCY>
	<TOPEVENT>
	<TOPSQLBYELAPSTIME>
	<DBERRLOG>
	<DBLSNRINFO>
</TAG2>
</EACHK>


合并方法：分别在 <TAG0>和<TAG2>下建立<NODE1> <NODE2>tag,用来存放两个节点xml中<TAG0>及<TAG2>内容 ，
比如，合并后结构：
<?xml version="1.0" encoding="UTF-8"?>
<EACHK>
<TAG0>
  <NODE1> 
  ###这里取自20240401_M001R01DG_lm0ora01_M001R011.xml中<TAG0>中的内容作为NODE1的内容>###
	<VER>
	<HOSTNAME>
	<OS>
	<RELVER>
	<CORES>
	<CPUCOUNT>
	<CPUMHZ>
	<MEMTOTAL>
	<SWAPTOTAL>
	<OSPARAMETER>
	....
  </NODE1>
  <NODE2>
  ###这里取自20240401_M001R01DG_lm0ora02_M001R012.xml中<TAG0>中的内容作为NODE2的内容>###
	<VER>
	<HOSTNAME>
	<OS>
	<RELVER>
	<CORES>
	<CPUCOUNT>
	<CPUMHZ>
	<MEMTOTAL>
	<SWAPTOTAL>
	<OSPARAMETER>
	....
  </NODE2>
</TAG0>
<TAG1>
###这里两个节点的<TAG1>内容一样，只需要保留第一份xml中的TAG1内容就可以###
	<DBCRSCHECK>
	<DBASMUSAGE>
	<DBNAME>
	<DBVER>
	<DBOSINFO>
	<LOGMODE>
	<FLASHBACK>
	...略...
</TAG1>
<TAG2>
  <NODE1>
  ###这里取自20240401_M001R01DG_lm0ora01_M001R011.xml中<TAG2>中的内容作为NODE1的内容>###
	<DBREDOSWITCH>
	<DB_SGA_SIZE>
	<DB_SHP_SIZE>
	<DB_SHP_PCT>
	<DB_4031CHECK>
	<LOADPROFILE>
	<INSTEFFICIENCY>
	<TOPEVENT>
	<TOPSQLBYELAPSTIME>
	<DBERRLOG>
	<DBLSNRINFO>
 </NODE1>
 <NODE2>
 ###这里取自20240401_M001R01DG_lm0ora02_M001R012.xml中<TAG2>中的内容作为NODE1的内容>###
	<DBREDOSWITCH>
	<DB_SGA_SIZE>
	<DB_SHP_SIZE>
	<DB_SHP_PCT>
	<DB_4031CHECK>
	<LOADPROFILE>
	<INSTEFFICIENCY>
	<TOPEVENT>
	<TOPSQLBYELAPSTIME>
	<DBERRLOG>
	<DBLSNRINFO>
  </NODE2>
</TAG2>
</EACHK>

